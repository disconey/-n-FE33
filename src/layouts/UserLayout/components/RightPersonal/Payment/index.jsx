import { Button, Form, Input, Select, Space } from "antd";
import React, { useEffect } from "react";
import * as S from "./styles";
import { useDispatch, useSelector } from "react-redux";
import { getUserInfoRequest, paymentRequest } from "redux/slicers/auth.slice";
import { useNavigate, useParams } from "react-router-dom/dist";
import { ROUTES } from "constants/routes";
const { Option } = Select;
const formItemLayout = {
  labelCol: {
    xs: {
      span: 24,
    },
    sm: {
      span: 8,
    },
  },
  wrapperCol: {
    xs: {
      span: 24,
    },
    sm: {
      span: 16,
    },
  },
};
const tailFormItemLayout = {
  wrapperCol: {
    xs: {
      span: 24,
      offset: 0,
    },
    sm: {
      span: 16,
      offset: 8,
    },
  },
};
const PaymentPage = () => {
  const [paymentForm] = Form.useForm();
  const { id } = useParams();
  const navigate = useNavigate();
  const dispatch = useDispatch();
  const { userInfo } = useSelector((state) => state.auth);

  useEffect(() => {
    dispatch(getUserInfoRequest({ id: parseInt(id) }));
  }, []);

  const handleSumbit = (values) => {
    console.log("üöÄ ~ file: index.jsx:51 ~ handleSumbit ~ values:", values);
    dispatch(
      paymentRequest({
        data: {
          id: userInfo.data.id,
          coin: userInfo.data.coin + parseInt(values.gender),
        },
        callback: () => navigate(ROUTES.PERSONAL.GENERALINFO),
      })
    );
  };

  const onFinish = (values) => {
    console.log("Received values of form: ", values);
  };
  return (
    <div className="deposit">
      <h2>Thanh to√°n qua th·∫ª c√†o</h2>
      <div>
        <S.BlueWarning>
          <p>
            Vui l√≤ng ƒëi·ªÅn theo th√¥ng tin th·∫ª b√™n d∆∞·ªõi, ch·ªçn m·ªánh gi√° v√† ƒëi·ªÅn ƒë·∫ßy
            ƒë·ªß th√¥ng tin, h·ªá th·ªëng s·∫Ω ki·ªÉm tra v√† n·∫°p xu t∆∞∆°ng ·ª©ng cho b·∫°n.
          </p>
          <p>
            Ch√∫ √Ω: Vui l√≤ng ch·ªçn ƒë√∫ng m·ªánh gi√°, h·ªá th·ªëng r·∫•t xin l·ªói v√† s·∫Ω tr·ª´
            50% n·∫øu b·∫°n ch·ªçn sai.
          </p>
          <p>Xin c·∫£m ∆°n!</p>
        </S.BlueWarning>
        <S.RedWarning>
          <p>
            C√°c b·∫°n ƒë√£ nh·∫≠p th√¥ng tin th·∫ª tr∆∞·ªõc ƒë√≥ m√† kh√¥ng hi·ªÉn th·ªã trong ph·∫ßn
            l·ªãch s·ª≠ n·∫°p v√† ch∆∞a nh·∫≠n ƒë∆∞·ª£c xu, vui l√≤ng nh·∫≠p l·∫°i. Li√™n h·ªá fanpage
            n·∫øu b·∫°n v·∫´n ch∆∞a nh·∫≠n ƒë∆∞·ª£c xu. R·∫•t xin l·ªói v√¨ s·ª± b·∫•t ti·ªán n√†y!
          </p>
        </S.RedWarning>
      </div>
      <S.Deposit>
        <Space>
          <Form
            {...formItemLayout}
            form={paymentForm}
            name="register"
            layout="vertical"
            onFinish={(values) => handleSumbit(values)}
            style={{
              width: "400px",
            }}
            scrollToFirstError
          >
            {/* <Form.Item
            name="gender"
            label="Lo·∫°i th·∫ª"
            rules={[
              {
                required: true,
                message: "Vui l√≤ng ch·ªçn Lo·∫°i th·∫ª!",
              },
            ]}
          >
            <Select placeholder="Ch·ªçn lo·∫°i th·∫ª">
              <Option value="">Viettel</Option>
              <Option value="">Vinaphone</Option>
              <Option value="">Mobifone</Option>
              <Option value="">Vietnamobile</Option>
              <Option value="">Zing</Option>
            </Select>
          </Form.Item> */}
            <Form.Item
              name="gender"
              label="M·ªánh gi√°"
              rules={[
                {
                  required: true,
                  message: "Vui l√≤ng ch·ªçn m·ªánh gi√°!",
                },
              ]}
            >
              <Select placeholder="Ch·ªçn m·ªánh gi√° ">
                <Option value="100">10,000</Option>
                <Option value="200">20,000</Option>
                <Option value="500">50,000</Option>
                <Option value="1000">100,000</Option>
                <Option value="2000">200,000</Option>
                <Option value="5000">500,000</Option>
              </Select>
            </Form.Item>
            {/* <Form.Item
            name="nickname"
            label="S·ªë Serial"
            rules={[
              {
                required: true,
                message: "Vui l√≤ng nh·∫≠p S·ªë Serial!",
              },
            ]}
          >
            <Input />
          </Form.Item>
          <Form.Item
            name="email"
            label="M√£ th·∫ª"
            rules={[
              {
                required: true,
                message: "Vui L√≤ng nh·∫≠p M√£ th·∫ª",
              },
            ]}
          >
            <Input />
          </Form.Item> */}
            <Form.Item {...tailFormItemLayout}>
              <Button type="primary" htmlType="submit">
                N·∫°p xu
              </Button>
            </Form.Item>
          </Form>
          <div>
            <h3>B·∫£ng quy ƒë·ªïi</h3>
            <S.Table>
              <thead>
                <tr>
                  <S.Th>S·ªë ti·ªÅn n·∫°p</S.Th>
                  <S.Th>S·ªë xu nh·∫≠n t∆∞∆°ng ·ª©ng</S.Th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <S.Td>10,000 ƒë</S.Td>
                  <S.Td>100 xu</S.Td>
                </tr>
                <tr>
                  <S.Td>20,000 ƒë</S.Td>
                  <S.Td>200 xu</S.Td>
                </tr>
                <tr>
                  <S.Td>50,000 ƒë</S.Td>
                  <S.Td>500 xu</S.Td>
                </tr>
                <tr>
                  <S.Td>100,000 ƒë</S.Td>
                  <S.Td>1000 xu</S.Td>
                </tr>
                <tr>
                  <S.Td>200,000 ƒë</S.Td>
                  <S.Td>2000 xu</S.Td>
                </tr>
                <tr>
                  <S.Td>500,000 ƒë</S.Td>
                  <S.Td>5000 xu</S.Td>
                </tr>
              </tbody>
            </S.Table>
          </div>
        </Space>
      </S.Deposit>
      <S.GreenWarning>
        <p>
          L∆∞u √Ω! Sau khi nh·∫≠p th√¥ng tin m√£ th·∫ª, h·ªá th·ªëng s·∫Ω ki·ªÉm tra v√† g·ª≠i cho
          b·∫°n m√£ code ·ªü TH√îNG B√ÅO sau ƒë√≥ b·∫°n v√†o ph·∫ßn nh·∫≠p code ƒë·ªÉ nh·∫≠n xu th√†nh
          c√¥ng.
        </p>
      </S.GreenWarning>
    </div>
  );
};

export default PaymentPage;
